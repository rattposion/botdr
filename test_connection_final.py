#!/usr/bin/env python3
"""
Teste final para verificar se a conex√£o WebSocket est√° funcionando
"""

import asyncio
import time
from data_collector import data_collector

async def test_final_connection():
    """Teste completo da conex√£o"""
    print("üîÑ Iniciando teste final da conex√£o...")
    
    try:
        # Conectar
        print("1. Conectando...")
        result = data_collector.connect()
        print(f"   Resultado da conex√£o: {result}")
        
        if result:
            print("‚úÖ Conex√£o estabelecida com sucesso!")
            
            # Aguardar um pouco para garantir que a autoriza√ß√£o foi processada
            print("2. Aguardando autoriza√ß√£o...")
            await asyncio.sleep(3)
            
            # Verificar se est√° autorizado
            if hasattr(data_collector, 'is_authorized') and data_collector.is_authorized:
                print("‚úÖ Autoriza√ß√£o confirmada!")
            else:
                print("‚ö†Ô∏è  Status de autoriza√ß√£o n√£o confirmado")
            
            # Testar uma opera√ß√£o simples
            print("3. Testando opera√ß√£o b√°sica...")
            try:
                # Tentar obter o tempo do servidor
                server_time = data_collector.get_server_time()
                if server_time:
                    print(f"‚úÖ Tempo do servidor obtido: {server_time}")
                else:
                    print("‚ö†Ô∏è  N√£o foi poss√≠vel obter o tempo do servidor")
            except Exception as e:
                print(f"‚ö†Ô∏è  Erro ao obter tempo do servidor: {e}")
            
            # Desconectar
            print("4. Desconectando...")
            data_collector.disconnect()
            print("‚úÖ Desconectado com sucesso!")
            
        else:
            print("‚ùå Falha na conex√£o")
            
    except Exception as e:
        print(f"‚ùå Erro durante o teste: {e}")
        import traceback
        traceback.print_exc()

def main():
    """Fun√ß√£o principal"""
    print("=" * 50)
    print("TESTE FINAL DE CONEX√ÉO DERIV WEBSOCKET")
    print("=" * 50)
    
    # Executar teste
    asyncio.run(test_final_connection())
    
    print("\n" + "=" * 50)
    print("TESTE CONCLU√çDO")
    print("=" * 50)

if __name__ == "__main__":
    main()